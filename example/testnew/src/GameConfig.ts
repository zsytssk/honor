/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
import award from "./alert/award"
import chat from "./alert/chat"
import common from "./alert/common"
import exchange from "./alert/exchange"
import gain from "./alert/gain"
import guide from "./alert/guide"
import operatelist from "./alert/operatelist"
import operatesetup from "./alert/operatesetup"
import playerlist from "./alert/playerlist"
import prize from "./alert/prize"
import prop from "./alert/prop"
import recharge from "./alert/recharge"
import result from "./alert/result"
import setup from "./alert/setup"
import shareprize from "./alert/shareprize"
import sharerecords from "./alert/sharerecords"
import switchpassport from "./alert/switchpassport"
import trend from "./alert/trend"
import header from "./hall/header"
import rank from "./hall/rank"
import hallscene from "./hall/hallscene"
import banker from "./room/banker"
import bet from "./room/bet"
import bettotal from "./room/bettotal"
import card from "./room/card"
import countdown from "./room/countdown"
import pool from "./room/pool"
import roomscene from "./room/roomscene"
import table from "./room/table"
import user from "./room/user"
/*
* 游戏初始化配置;
*/
export default class GameConfig{
    static width:number=1334;
    static height:number=750;
    static scaleMode:string="fixedwidth";
    static screenMode:string="horizontal";
    static alignV:string="top";
    static alignH:string="left";
    static startScene:any="views/Alert/Award.scene";
    static sceneRoot:string="";
    static debug:boolean=false;
    static stat:boolean=true;
    static physicsDebug:boolean=true;
    static exportSceneToJson:boolean=true;
    constructor(){}
    static init(){
        var reg: Function = Laya.ClassUtils.regClass;
        reg("alert/award.ts",award);
        reg("alert/chat.ts",chat);
        reg("alert/common.ts",common);
        reg("alert/exchange.ts",exchange);
        reg("alert/gain.ts",gain);
        reg("alert/guide.ts",guide);
        reg("alert/operatelist.ts",operatelist);
        reg("alert/operatesetup.ts",operatesetup);
        reg("alert/playerlist.ts",playerlist);
        reg("alert/prize.ts",prize);
        reg("alert/prop.ts",prop);
        reg("alert/recharge.ts",recharge);
        reg("alert/result.ts",result);
        reg("alert/setup.ts",setup);
        reg("alert/shareprize.ts",shareprize);
        reg("alert/sharerecords.ts",sharerecords);
        reg("alert/switchpassport.ts",switchpassport);
        reg("alert/trend.ts",trend);
        reg("hall/header.ts",header);
        reg("hall/rank.ts",rank);
        reg("hall/hallscene.ts",hallscene);
        reg("room/banker.ts",banker);
        reg("room/bet.ts",bet);
        reg("room/bettotal.ts",bettotal);
        reg("room/card.ts",card);
        reg("room/countdown.ts",countdown);
        reg("room/pool.ts",pool);
        reg("room/roomscene.ts",roomscene);
        reg("room/table.ts",table);
        reg("room/user.ts",user);
    }
}
GameConfig.init();